# Generated from auto.pro.

add_subdirectory(doublevectors)
add_subdirectory(qgeoaddress)
add_subdirectory(qgeoshape)
add_subdirectory(qgeorectangle)
add_subdirectory(qgeocircle)
add_subdirectory(qgeopath)
add_subdirectory(qgeopolygon)
add_subdirectory(qgeocoordinate)
add_subdirectory(qgeocoordinateobject)
add_subdirectory(qgeolocation)
add_subdirectory(qgeopositioninfo)
add_subdirectory(qgeosatelliteinfo)
# TODO: enable location tests later!
# if(TARGET Qt::Location)
#     add_subdirectory(geotestplugin)
#     add_subdirectory(qplace)
#     add_subdirectory(qplaceattribute)
#     add_subdirectory(qplacecategory)
#     add_subdirectory(qplacecontactdetail)
#     add_subdirectory(qplacecontentrequest)
#     add_subdirectory(qplacedetailsreply)
#     add_subdirectory(qplaceeditorial)
#     add_subdirectory(qplacematchreply)
#     add_subdirectory(qplacematchrequest)
#     add_subdirectory(qplaceimage)
#     add_subdirectory(qplaceratings)
#     add_subdirectory(qplaceresult)
#     add_subdirectory(qproposedsearchresult)
#     add_subdirectory(qplacereply)
#     add_subdirectory(qplacereview)
#     add_subdirectory(qplacesearchrequest)
#     add_subdirectory(qplacesupplier)
#     add_subdirectory(qplacesearchresult)
#     add_subdirectory(qplacesearchreply)
#     add_subdirectory(qplacesearchsuggestionreply)
#     add_subdirectory(qplaceuser)
#     add_subdirectory(qgeocodingmanagerplugins)
#     add_subdirectory(qgeocameracapabilities)
#     add_subdirectory(qgeocameradata)
#     add_subdirectory(qgeocodereply)
#     add_subdirectory(qgeomaneuver)
#     add_subdirectory(qgeotiledmapscene)
#     add_subdirectory(qgeoroute)
#     add_subdirectory(qgeoroutereply)
#     add_subdirectory(qgeorouterequest)
#     add_subdirectory(qgeoroutesegment)
#     add_subdirectory(qgeoroutingmanagerplugins)
#     add_subdirectory(qgeotilespec)
#     add_subdirectory(qgeoroutexmlparser)
#     add_subdirectory(maptype)
#     add_subdirectory(qgeocameratiles)
#     add_subdirectory(qgeojson)
# endif()
# if(TARGET Qt::Location AND NOT ANDROID)
#     add_subdirectory(qplacemanager)
#     add_subdirectory(qplacemanager_nokia)
#     add_subdirectory(qplacemanager_unsupported)
#     add_subdirectory(placesplugin_unsupported)
#     add_subdirectory(cmake)
#     add_subdirectory(qmlinterface)
#     add_subdirectory(qgeoserviceprovider)
#     add_subdirectory(qgeoroutingmanager)
#     add_subdirectory(nokia_services)
#     add_subdirectory(qgeocodingmanager)
#     add_subdirectory(qgeotiledmap)
# endif()
# if(TARGET Qt::Location AND TARGET Qt::Quick AND NOT ANDROID)
#     add_subdirectory(declarative_mappolyline)
#     add_subdirectory(declarative_location_core)
# endif()
# if(TARGET Qt::Location AND TARGET Qt::Quick AND NOT ANDROID AND NOT APPLE)
#     add_subdirectory(declarative_ui)
# endif()
if(TARGET Qt::Quick AND NOT ANDROID)
    add_subdirectory(dummypositionplugin)
    add_subdirectory(declarative_positioning_core)
    add_subdirectory(declarative_geolocation)
    add_subdirectory(qdeclarativegeolocation)
    add_subdirectory(qdeclarativeposition)
    add_subdirectory(qdeclarativepositionsource)
    add_subdirectory(qquickgeocoordinateanimation)
endif()
if(NOT ANDROID)
    add_subdirectory(positionplugin)
    add_subdirectory(positionplugintest)
    add_subdirectory(qgeoareamonitor)
    add_subdirectory(qgeopositioninfosource)
    add_subdirectory(qgeosatelliteinfosource)
    add_subdirectory(qnmeapositioninfosource)
    add_subdirectory(qnmeasatelliteinfosource)
endif()
