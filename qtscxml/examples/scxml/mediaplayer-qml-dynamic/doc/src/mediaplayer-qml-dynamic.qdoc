// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \example mediaplayer-qml-dynamic
    \title Qt SCXML Media Player QML Example (Dynamic)
    \ingroup examples-qtscxml

    \brief A Qt Quick application that sends data to and receives it from a
    dynamically loaded ECMAScript data model.

    \image mediaplayer.png

    \e {Media Player QML Example (Dynamic)} demonstrates how to access data from
    a dynamically loaded ECMAScript data model.

    The UI is created using Qt Quick.

    \include examples-run.qdocinc

    \include mediaplayer-ecmascript-data-model.qdocinc

    \section1 Dynamically Loading the State Machine

    We link against the Qt SCXML module by adding the following line to the
    project build files.

    With qmake to the \e mediaplayer-qml-dynamic.pro

    \quotefromfile mediaplayer-qml-dynamic/mediaplayer-qml-dynamic.pro
    \skipto QT
    \printline scxml

    With cmake to the \e CMakeLists.txt
    \quotefromfile mediaplayer-qml-dynamic/CMakeLists.txt
    \skipto find_package
    \printline Scxml
    \skipto target_link_libraries
    \printuntil )

    We dynamically create the state machine in
    \e {mediaplayer-common\\Mediaplayer.qml:}

    \quotefromfile mediaplayer-common/Mediaplayer.qml
    \skipto import QtScxml
    \printuntil scxmlLoader.source
*/
