// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!

//! [all]
\section1 Desktop Platforms
//! [desktop]

\section2 \l{Qt for Linux/X11}{Linux/X11}
//! [linux]
\table 80%
    \header \li Distribution \li Architecture \li Compiler \li Notes
    \row \li Red Hat 8.4
        \li \c x86_64
        \li GCC 10 (toolset)
        \li
    \row \li openSUSE 15.3
        \li \c x86_64
        \li GCC 9
        \li
    \row \li SUSE Linux Enterprise Server 15 SP4
        \li \c x86_64
        \li GCC 10
        \li
    \row \li Ubuntu 20.04
        \li \c x86_64
        \li GCC as provided by Canonical, GCC 9.x
        \li
\endtable
//! [linux]

\section2 \l{Qt for macOS}{\macos}
//! [macos]
\table 80%
    \header \li Target Platform \li Architecture \li Build Environment
    \row \li \macos 10.14, 10.15, 11, 12
        \li \c x86_64, \c x86_64h, and \c arm64
        \li Xcode 12 (11 SDK), \li Xcode 13 (12 SDK)
\endtable
//! [macos]

\section2 \l{Qt for Windows}{Windows}
//! [windows]
\table 80%
    \header \li Operating System \li Architecture \li Compiler
    \row \li Windows 11 21H2 (1809 or later)
        \li \c x86_64
        \li MSVC 2022, MSVC 2019, MinGW 11.2
        \li
    \row \li Windows 10 21H2 (1809 or later)
        \li \c x86_64
        \li MSVC 2022, MSVC 2019, MinGW 11.2
        \li
    \row \li Windows on ARM
        \li \c arm64
        \li MSVC 2019/2022
        \li Technology Preview
\endtable

\note Windows on ARM is only supported as a deployment target. Applications have
      to be cross-compiled from an x86-64 Windows machine and deployed to target.

//! [windows]

//! [desktop]

\section1 Mobile Platforms
//! [mobile]

\section2 \l{Qt for Android}{Android}
//! [android]

The following configurations are supported in this Qt release:
\table 80%
    \header \li Distribution \li Architecture \li Compiler \li Notes
    \row \li Android 6.0 or later (API level 23 or higher)
        \li \c armv7a, \c x86, \c arm64-v8, and \c x86_64
        \li Clang 12.0.8 (NDK r23b) as provided by Google
        \li For JDK versions see \l{Java Development Kit (JDK)}
\endtable
\note Qt user apps require using the same NDK r23b version used for
building the official Qt for Android libraries. A different
version might be missing the symbols for \c __emutls_get_address.

//! [android]

\section2 \l{Qt for iOS}{iOS}
//! [ios]
\table 80%
    \header \li Target Platform \li Architecture \li Build Environment \li Notes
    \row \li iOS 13, iOS 14, iOS 15
        \li \c armv8 (\c arm64)
        \li Xcode 12 (iOS 14 SDK), \b {Xcode 13} (iOS 15 SDK)
        \li
\endtable
//! [ios]

\section2 \l{Qt for WebAssembly}{WebAssembly (Technology Preview)}
//! [webassembly]
\table 80%
    \header \li Target Browser \li Device
    \row    \li Chrome         \li Desktop, Mobile (Android)
    \row    \li Safari         \li Desktop, Mobile (iOS)
    \row    \li Firefox        \li Desktop
    \row    \li Edge           \li Desktop
\endtable

See notes on \l {Qt for WebAssembly#Supported Browsers}{supported browsers}.
//! [webassembly]

//! [mobile]

\section1 Embedded Platforms
//! [embedded]

\section2 Android Automotive OS

The \l{Qt for Android Automotive} solution is based on \l{Qt for Android},
supporting Android 10 and 11, with the Android Automotive car API bindings.

\section2 webOS OSE

\l{Qt for webOS}{webOS OSE}, open-source edition of webOS, supports Qt
application development.

\section2 \l{Qt for Embedded Linux}{Embedded Linux}

Refer to \l{Configure an Embedded Linux Device} for information on generic
cross-compilation of Qt for Embedded Linux devices.

For further embedded Linux platform support, consult the \l{Boot to Qt}
documentation.

\section2 Real Time Operating Systems

\table 80%
    \header \li Operating System \li Architecture \li Compiler \li Provided in
    \row \li INTEGRITY 19.0.13
    \li \c arm64
    \li GHS compiler version 2020.1.4 or newer
    \li \l{Qt for INTEGRITY}
    \row \li QNX 7.1
    \li
    \li
    \li \l{Qt for QNX}
\endtable

//! [embedded]

\section1 Web Platforms
//! [web]

\section2  \l{Qt for WebAssembly}{WebAssembly}
\table 80%
    \header \li Host Platform \li Architecture \li Compiler \li Browsers
    \row \li macOS
        \li \c wasm32
        \li Emscripten 3.1.10
        \li Safari, Chrome, Firefox
    \row \li Windows
        \li \c wasm32
        \li Emscripten 3.1.10
        \li Edge, Chrome, Firefox
    \row \li Linux
        \li \c wasm32
        \li Emscripten 3.1.10
        \li Chrome, Firefox
\endtable

//! [web]

//! [all]

*/
