OBTAINING QT5 FROM GIT
======================

 Synopsis
 ========

 For a more in-depth description on how to build Qt5 from git,
 please see: http://wiki.qt.io/Building_Qt_5_from_Git


 Get The Submodules
 ==================

 Cloning Qt5 does not automatically clone all submodules.
 To get the submodules, it is recommended to use the `init-repository' script.

   ./init-repository

 See `./init-repository -help' for full documentation on the many supported
 options.


 Update The Submodules (optional)
 ================================

 After a plain `git clone' and `init-repository', you will have each submodule
 checked out to a particular SHA1.  This combination of SHA1s is guaranteed to
 have passed some basic acceptance testing.

 If (and only if!) you need newer versions of some submodules, you can manually
 fetch and/or pull and/or reset any modules you like, or use the qt5_tool to
 pull all modules:

   ./qtrepotools/bin/qt5_tool -p

 NOTE! As soon as you change the SHA1 of any submodule, you are using a
 combination of modules which is potentially untested and broken!  If you want
 something which is more likely to compile, stick to the module SHA1s provided
 in this repository.


 Install The Git Grafts (optional)
 =================================

 If you want to be able to connect the Qt5 and Qt4 development history, you
 may set up git grafts with the following command:

   git submodule foreach '../qtrepotools/bin/git-qt-grafts <path_to_history>'


 Developing and Contributing to Qt
 ================================

 For more information on how to develop and contribute to Qt, please see:
 http://wiki.qt.io/Category:Developing_Qt
