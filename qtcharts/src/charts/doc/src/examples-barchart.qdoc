// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \example barchart
    \title BarChart Example
    \ingroup qtcharts_examples

    \brief The example shows how to create a bar chart.

    BarChart shows the data in sets as separate bars, which are  in categories.

    \image examples_barchart.png

    \include examples-run.qdocinc

    \section1 Creating Bar Charts

    The barsets are used in the same way in all barcharts.
    To illustrate the difference between various barcharts, we use the same data in the examples.
    Data that the barchart visualizes, is defined by the QBarSet instances. Here we create the sets and append data
    to them. The data is appended here with the << operator. Alternatively, the append method could be used.

    \snippet barchart/main.cpp 1

    We create the series and append the barsets to it. The series takes ownership of the barsets. The series groups the data from sets to categories.
    First values of each set are grouped together at first category second value to second category and so on.

    \snippet barchart/main.cpp 2

    Here we create the chart object and add the series to it. We set the title for chart with setTitle and then turn on animations of the series by calling
    setAnimationOptions(QChart::SeriesAnimations)

    \snippet barchart/main.cpp 3

    To have categories displayed on axis, we need to create a QBarCategoryAxis
    for that. Here we create a category axis with a list of categories and
    set it to be aligned to the bottom, acting as the x-axis, and attach it to
    the series. The chart takes ownership of the axis. For y-axis we use a
    value axis, aligned to the left-hand side.

    \snippet barchart/main.cpp 4

    We also want to show the legend. To do that, we get the legend pointer from the chart and set it to visible. We also place the legend to the bottom of the chart by setting its alignment to Qt::AlignBottom.

    \snippet barchart/main.cpp 5

    Finally we add the chart onto a view. We also turn on the antialiasing for the chartView.

    \snippet barchart/main.cpp 6

    The chart is ready to be shown. We set the chart to be central widget of the window. We also set the size for the chart window and show it.

    \snippet barchart/main.cpp 7
*/
